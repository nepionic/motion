<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.13">
  <POU Name="Mc2AsyncCommand" Id="{953adf88-71d4-4ebb-b9ec-f788d1d872b6}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK INTERNAL ABSTRACT Mc2AsyncCommand EXTENDS NoopAsyncCommand IMPLEMENTS MotionCommand
VAR
	axis_ref : REFERENCE TO Tc2_Mc2.Axis_Ref;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="Active" Id="{70d73704-0c07-420e-aa2d-e2e58caa842d}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY PUBLIC ABSTRACT Active : BOOL]]></Declaration>
      <Get Name="Get" Id="{39c3a352-003e-4e7b-bcf3-47f44d44c237}">
        <Declaration><![CDATA[PUBLIC]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_Init" Id="{dbb1e3ac-621d-4122-a8de-07b7bf02e7ae}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)
	axis : REFERENCE TO Mc2Axis;   
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[axis_ref REF= axis.Mc2AxisRef;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>